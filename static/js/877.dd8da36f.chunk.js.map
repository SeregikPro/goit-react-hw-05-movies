{"version":3,"file":"static/js/877.dd8da36f.chunk.js","mappings":"iPA4CA,EAvCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACJL,IACFM,EAAAA,EAAAA,IAAeN,GACZO,KAAKH,GACLI,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAE/B,CAACT,KAGF,8BACGG,IACC,SAACS,EAAA,EAAD,CACEC,QAAQ,OACRC,QAAQ,OACRC,oBAAoB,0BACpBC,GAAG,KACHC,EAAE,OALJ,SAOGd,EAAUe,KAAKC,KACd,YAAwD,IAArDC,EAAoD,EAApDA,GAAIC,EAAgD,EAAhDA,KAAoBC,EAA4B,EAA1CC,aAA0BC,EAAgB,EAAhBA,UACrC,OACE,2BACE,gBAAKC,IAAKC,EAAAA,GAAcJ,EAAYK,IAAKN,EAAMO,MAAO,OACtD,yBAAMP,KACN,uCAAeG,OAHRJ,Y,iOC5BnBS,EAAU,mCAEHH,EAAc,kCAE3BI,IAAAA,SAAAA,QAHqB,+BAKrB,IAAMC,EAAS,CACbA,OAAQ,CAAEC,QAASH,IAGRI,EAAa,mCAAG,6GAEFH,IAAAA,IAAA,sBACOC,GAC3BxB,MAAK,SAAA2B,GAAQ,OAAIA,EAASC,KAAKC,WAJT,cAEnBF,EAFmB,yBAKlBA,GALkB,gCAOzBxB,QAAQD,MAAR,MAPyB,yDAAH,qDAWb4B,EAAU,mCAAG,WAAMjB,GAAN,gGAECU,IAAAA,IAAA,iBACNV,GAAMW,GACpBxB,MAAK,SAAA2B,GAAQ,OAAIA,EAASC,QAJP,cAEhBD,EAFgB,yBAKfA,GALe,gCAOtBxB,QAAQD,MAAR,MAPsB,yDAAH,sDAWVH,EAAc,mCAAG,WAAMc,GAAN,gGAEHU,IAAAA,IAAA,iBACNV,EADM,YACQW,GAC5BxB,MAAK,SAAA2B,GAAQ,OAAIA,EAASC,QAJH,cAEpBD,EAFoB,yBAKnBA,GALmB,gCAO1BxB,QAAQD,MAAR,MAP0B,yDAAH,sDAWd6B,EAAgB,mCAAG,WAAMlB,GAAN,gGAELU,IAAAA,IAAA,iBACNV,EADM,YACQW,GAC5BxB,MAAK,SAAA2B,GAAQ,OAAIA,EAASC,KAAKC,WAJN,cAEtBF,EAFsB,yBAKrBA,GALqB,gCAO5BxB,QAAQD,MAAR,MAP4B,yDAAH,sDAWhB8B,EAAY,mCAAG,WAAMC,GAAN,gFACpBT,EAAS,CAAEA,OAAQ,CAAEC,QAASH,EAASW,MAAAA,IADnB,kBAGDV,IAAAA,IAAA,gBACCC,GACrBxB,MAAK,SAAA2B,GAAQ,OAAIA,EAASC,KAAKC,WALV,cAGlBF,EAHkB,yBAMjBA,GANiB,gCAQxBxB,QAAQD,MAAR,MARwB,yDAAH","sources":["components/Cast/Cast.jsx","services/moviesAPI.js"],"sourcesContent":["import Box from 'components/Box';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast, API_IMG_URL } from 'services/moviesAPI';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState();\n\n  useEffect(() => {\n    if (movieId) {\n      fetchMovieCast(movieId)\n        .then(setMovieCast)\n        .catch(error => console.log(error));\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {movieCast && (\n        <Box\n          display=\"grid\"\n          gridGap=\"20px\"\n          gridTemplateColumns=\"repeat(auto-fit, 200px)\"\n          as=\"ul\"\n          p=\"30px\"\n        >\n          {movieCast.cast.map(\n            ({ id, name, profile_path: profileImg, character }) => {\n              return (\n                <li key={id}>\n                  <img src={API_IMG_URL + profileImg} alt={name} width={100} />\n                  <div>{name}</div>\n                  <p>Character: {character}</p>\n                </li>\n              );\n            }\n          )}\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '6836ceb3068f4013cb2a833e30b38a09';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: { api_key: API_KEY },\n};\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios\n      .get(`/trending/movie/day`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/credits`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieReview = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/reviews`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  const params = { params: { api_key: API_KEY, query } };\n  try {\n    const response = await axios\n      .get(`/search/movie`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["movieId","useParams","useState","movieCast","setMovieCast","useEffect","fetchMovieCast","then","catch","error","console","log","Box","display","gridGap","gridTemplateColumns","as","p","cast","map","id","name","profileImg","profile_path","character","src","API_IMG_URL","alt","width","API_KEY","axios","params","api_key","fetchTrending","response","data","results","fetchMovie","fetchMovieReview","searchMovies","query"],"sourceRoot":""}