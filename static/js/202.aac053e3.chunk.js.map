{"version":3,"file":"static/js/202.aac053e3.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { ImArrowLeft2 } from 'react-icons/im';\n\nexport const Input = styled.input`\n  padding: 8px 20px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const BackButton = styled.button`\n  position: relative;\n  background-color: #fff;\n  margin-bottom: 10px;\n  width: 40px;\n  height: 40px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Icon = styled(ImArrowLeft2)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { fetchMovie, API_IMG_URL } from 'services/moviesAPI';\nimport { useEffect, useState, Suspense } from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useLocation,\n  useNavigate,\n  Navigate,\n} from 'react-router-dom';\nimport Box from 'components/Box';\nimport { BackButton, Icon } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState();\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMovie(movieId).then(setMovieData);\n  }, [movieId]);\n\n  if (movieData === undefined) {\n    return;\n  }\n  if (movieData === null) {\n    return <Navigate to=\"/not-found\" replace={true} />;\n  }\n\n  const { title, poster_path, genres, vote_average, overview } = movieData;\n\n  return (\n    <Box>\n      {movieData && (\n        <Box>\n          <BackButton\n            type=\"button\"\n            onClick={() => navigate(location?.state?.from ?? '/')}\n          >\n            <Icon />\n          </BackButton>\n          <Box display=\"flex\">\n            <img src={`${API_IMG_URL}${poster_path}`} alt=\"movie poster\" />\n            <div>\n              <h2>{title}</h2>\n              <p>\n                User score: <b>{vote_average}</b>\n              </p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>\n                {genres.map(({ id, name }) => (\n                  <span key={id}>{name}</span>\n                ))}\n              </p>\n            </div>\n          </Box>\n          <Box>\n            <h3>Additional information</h3>\n            <p>\n              <Link to=\"cast\" state={{ from: location.state?.from }}>\n                Cast\n              </Link>\n            </p>\n            <p>\n              <Link to=\"reviews\" state={{ from: location.state?.from }}>\n                Reviews\n              </Link>\n            </p>\n          </Box>\n          <Suspense fallback={<section>Loading...</section>}>\n            <Outlet />\n          </Suspense>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '6836ceb3068f4013cb2a833e30b38a09';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: { api_key: API_KEY },\n};\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios\n      .get(`/trending/movie/day`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/credits`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieReview = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/reviews`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  const params = { params: { api_key: API_KEY, query } };\n  try {\n    const response = await axios\n      .get(`/search/movie`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["BackButton","styled","Icon","ImArrowLeft2","useState","movieData","setMovieData","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","fetchMovie","then","undefined","to","replace","title","poster_path","genres","vote_average","overview","Box","type","onClick","state","from","display","src","API_IMG_URL","alt","map","id","name","Suspense","fallback","API_KEY","axios","params","api_key","fetchTrending","response","data","results","console","error","fetchMovieCast","fetchMovieReview","searchMovies","query"],"sourceRoot":""}