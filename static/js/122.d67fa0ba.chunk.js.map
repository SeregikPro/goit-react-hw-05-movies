{"version":3,"file":"static/js/122.d67fa0ba.chunk.js","mappings":"iPAiCA,EA5BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,YAApC,eAAOC,EAAP,KAAmBC,EAAnB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GACdO,KAAKH,GACLI,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACT,KAGF,SAACY,EAAA,EAAD,CAAKC,GAAG,KAAKC,EAAE,OAAf,SACGX,GAAcA,EAAWY,OAAS,EACjCZ,EAAWa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5B,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,OAOb,0E,iOCzBFG,EAAU,mCAEHC,EAAc,kCAE3BC,IAAAA,SAAAA,QAHqB,+BAKrB,IAAMC,EAAS,CACbA,OAAQ,CAAEC,QAASJ,IAGRK,EAAa,mCAAG,6GAEFH,IAAAA,IAAA,sBACOC,GAC3BhB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,KAAKC,WAJT,cAEnBF,EAFmB,yBAKlBA,GALkB,gCAOzBhB,QAAQD,MAAR,MAPyB,yDAAH,qDAWboB,EAAU,mCAAG,WAAMZ,GAAN,gGAECK,IAAAA,IAAA,iBACNL,GAAMM,GACpBhB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,QAJP,cAEhBD,EAFgB,yBAKfA,GALe,gCAOtBhB,QAAQD,MAAR,MAPsB,yDAAH,sDAWVqB,EAAc,mCAAG,WAAMb,GAAN,gGAEHK,IAAAA,IAAA,iBACNL,EADM,YACQM,GAC5BhB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,QAJH,cAEpBD,EAFoB,yBAKnBA,GALmB,gCAO1BhB,QAAQD,MAAR,MAP0B,yDAAH,sDAWdH,EAAgB,mCAAG,WAAMW,GAAN,gGAELK,IAAAA,IAAA,iBACNL,EADM,YACQM,GAC5BhB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,KAAKC,WAJN,cAEtBF,EAFsB,yBAKrBA,GALqB,gCAO5BhB,QAAQD,MAAR,MAP4B,yDAAH,sDAWhBsB,EAAY,mCAAG,WAAMC,GAAN,gFACpBT,EAAS,CAAEA,OAAQ,CAAEC,QAASJ,EAASY,MAAAA,IADnB,kBAGDV,IAAAA,IAAA,gBACCC,GACrBhB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,KAAKC,WALV,cAGlBF,EAHkB,yBAMjBA,GANiB,gCAQxBhB,QAAQD,MAAR,MARwB,yDAAH","sources":["components/Reviews/Reviews.jsx","services/moviesAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReview } from 'services/moviesAPI';\nimport Box from 'components/Box';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewData, setReviewData] = useState();\n\n  useEffect(() => {\n    fetchMovieReview(movieId)\n      .then(setReviewData)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <Box as=\"ul\" p=\"30px\">\n      {reviewData && reviewData.length > 0 ? (\n        reviewData.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <h3>We don't have any reviews for this movie.</h3>\n      )}\n    </Box>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '6836ceb3068f4013cb2a833e30b38a09';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: { api_key: API_KEY },\n};\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios\n      .get(`/trending/movie/day`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/credits`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieReview = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/reviews`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  const params = { params: { api_key: API_KEY, query } };\n  try {\n    const response = await axios\n      .get(`/search/movie`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["movieId","useParams","useState","reviewData","setReviewData","useEffect","fetchMovieReview","then","catch","error","console","log","Box","as","p","length","map","id","author","content","API_KEY","API_IMG_URL","axios","params","api_key","fetchTrending","response","data","results","fetchMovie","fetchMovieCast","searchMovies","query"],"sourceRoot":""}