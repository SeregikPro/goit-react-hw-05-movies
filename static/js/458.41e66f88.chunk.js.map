{"version":3,"file":"static/js/458.41e66f88.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","services/moviesAPI.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n// import { List } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.length > 0 &&\n        movies.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\nimport { ImSearch } from 'react-icons/im';\n\nexport const Input = styled.input`\n  padding: 8px 20px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const SearchButton = styled.button`\n  position: relative;\n  background-color: #fff;\n  width: 40px;\n  height: 40px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Icon = styled(ImSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import PropTypes from 'prop-types';\nimport { Input, SearchButton, Icon } from './SearchBox.styled';\n\nimport Box from 'components/Box';\n\nconst SearchBox = ({ onSubmit }) => {\n  return (\n    <Box as=\"form\" display=\"flex\" alignItems=\"center\" onSubmit={onSubmit}>\n      <Input name=\"query\" autoComplete=\"off\" placeholder=\"Search movies\" />\n      <SearchButton type=\"submit\">\n        <Icon />\n      </SearchButton>\n    </Box>\n  );\n};\n\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { searchMovies } from 'services/moviesAPI';\nimport SearchBox from 'components/SearchBox';\nimport MovieList from 'components/MovieList';\nimport Box from 'components/Box';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n\n    if (query) {\n      searchMovies(query).then(setMovies);\n    }\n  }, [searchParams]);\n\n  const handleSearchChange = event => {\n    event.preventDefault();\n    const query = event.target.elements.query.value.trim().toLowerCase();\n\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <div>\n      <h2>Movies</h2>\n      <Box>\n        <SearchBox onSubmit={handleSearchChange} />\n        {movies.length > 0 && (\n          <MovieList movies={movies} state={{ from: location }} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '6836ceb3068f4013cb2a833e30b38a09';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: { api_key: API_KEY },\n};\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios\n      .get(`/trending/movie/day`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/credits`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieReview = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/reviews`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  const params = { params: { api_key: API_KEY, query } };\n  try {\n    const response = await axios\n      .get(`/search/movie`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["movies","location","useLocation","length","map","id","title","to","state","from","Input","styled","SearchButton","Icon","ImSearch","onSubmit","Box","as","display","alignItems","name","autoComplete","placeholder","type","useState","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","query","get","searchMovies","then","event","preventDefault","target","elements","value","trim","toLowerCase","MovieList","API_KEY","API_IMG_URL","axios","params","api_key","fetchTrending","response","data","results","console","error","fetchMovie","fetchMovieCast","fetchMovieReview"],"sourceRoot":""}