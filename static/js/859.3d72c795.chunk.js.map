{"version":3,"file":"static/js/859.3d72c795.chunk.js","mappings":"qNAGaA,EAASC,EAAAA,GAAAA,GAAH,+CAINC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,4I,mBC0BpB,EA5BkB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,OAAhB,SACGL,EAAOM,OAAS,GACfN,EAAOO,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAChB,OACE,SAACb,EAAD,WACE,SAACE,EAAD,CAASY,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMX,GAA7C,SACGQ,KAFQD,U,+HCOzB,EAfa,WACX,OAA4CK,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAgBC,KAAKH,KACpB,KAGD,UAACZ,EAAA,EAAD,CAAKC,GAAG,UAAUe,GAAG,OAArB,WACE,4CACA,SAACC,EAAA,EAAD,CAAWpB,OAAQc,S,iOCbnBO,EAAU,mCAEHC,EAAc,kCAE3BC,IAAAA,SAAAA,QAHqB,+BAKrB,IAAMC,EAAS,CACbA,OAAQ,CAAEC,QAASJ,IAGRJ,EAAa,mCAAG,6GAEFM,IAAAA,IAAA,sBACOC,GAC3BN,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,KAAKC,WAJT,cAEnBF,EAFmB,yBAKlBA,GALkB,gCAOzBG,QAAQC,MAAR,MAPyB,yDAAH,qDAWbC,EAAU,mCAAG,WAAMvB,GAAN,gGAECe,IAAAA,IAAA,iBACNf,GAAMgB,GACpBN,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,QAJP,cAEhBD,EAFgB,yBAKfA,GALe,gCAOtBG,QAAQC,MAAR,MAPsB,yDAAH,sDAWVE,EAAc,mCAAG,WAAMxB,GAAN,gGAEHe,IAAAA,IAAA,iBACNf,EADM,YACQgB,GAC5BN,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,QAJH,cAEpBD,EAFoB,yBAKnBA,GALmB,gCAO1BG,QAAQC,MAAR,MAP0B,yDAAH,sDAWdG,EAAgB,mCAAG,WAAMzB,GAAN,gGAELe,IAAAA,IAAA,iBACNf,EADM,YACQgB,GAC5BN,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,KAAKC,WAJN,cAEtBF,EAFsB,yBAKrBA,GALqB,gCAO5BG,QAAQC,MAAR,MAP4B,yDAAH,sDAWhBI,EAAY,mCAAG,WAAMC,GAAN,gFACpBX,EAAS,CAAEA,OAAQ,CAAEC,QAASJ,EAASc,MAAAA,IADnB,kBAGDZ,IAAAA,IAAA,gBACCC,GACrBN,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,KAAKC,WALV,cAGlBF,EAHkB,yBAMjBA,GANiB,gCAQxBG,QAAQC,MAAR,MARwB,yDAAH","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListEl = styled.li`\n  margin-bottom: 8px;\n`;\n\nexport const Navlink = styled(NavLink)`\n  color: darkblue;\n  text-decoration: none;\n  :hover {\n    color: purple;\n    text-decoration: underline;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { ListEl, Navlink } from './MovieList.styled';\nimport Box from 'components/Box';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Box as=\"ul\" pl=\"20px\">\n      {movies.length > 0 &&\n        movies.map(({ id, title }) => {\n          return (\n            <ListEl key={id}>\n              <Navlink to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Navlink>\n            </ListEl>\n          );\n        })}\n    </Box>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MovieList;\n","import { useEffect, useState } from 'react';\nimport { fetchTrending } from 'services/moviesAPI';\nimport MovieList from 'components/MovieList';\nimport Box from 'components/Box';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrending().then(setTrendingMovies);\n  }, []);\n\n  return (\n    <Box as=\"section\" ml=\"30px\">\n      <h1>Trending today</h1>\n      <MovieList movies={trendingMovies} />\n    </Box>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '6836ceb3068f4013cb2a833e30b38a09';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: { api_key: API_KEY },\n};\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios\n      .get(`/trending/movie/day`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/credits`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieReview = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/reviews`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  const params = { params: { api_key: API_KEY, query } };\n  try {\n    const response = await axios\n      .get(`/search/movie`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["ListEl","styled","Navlink","NavLink","movies","location","useLocation","Box","as","pl","length","map","id","title","to","state","from","useState","trendingMovies","setTrendingMovies","useEffect","fetchTrending","then","ml","MovieList","API_KEY","API_IMG_URL","axios","params","api_key","response","data","results","console","error","fetchMovie","fetchMovieCast","fetchMovieReview","searchMovies","query"],"sourceRoot":""}