{"version":3,"file":"static/js/859.2e3311d2.chunk.js","mappings":"uMAgCA,EA5BkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,OAAS,GACfH,EAAOI,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAChB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAA1C,SACGK,KAFID,U,qHCSrB,EAhBa,WACX,OAA4CK,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAOA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAgBC,KAAKH,KACpB,KAGD,4BACE,4CACA,SAACI,EAAA,EAAD,CAAWhB,OAAQW,S,iOCdnBM,EAAU,mCAEHC,EAAc,kCAE3BC,IAAAA,SAAAA,QAHqB,+BAKrB,IAAMC,EAAS,CACbA,OAAQ,CAAEC,QAASJ,IAGRH,EAAa,mCAAG,6GAEFK,IAAAA,IAAA,sBACOC,GAC3BL,MAAK,SAAAO,GAAQ,OAAIA,EAASC,KAAKC,WAJT,cAEnBF,EAFmB,yBAKlBA,GALkB,gCAOzBG,QAAQC,MAAR,MAPyB,yDAAH,qDAWbC,EAAU,mCAAG,WAAMtB,GAAN,gGAECc,IAAAA,IAAA,iBACNd,GAAMe,GACpBL,MAAK,SAAAO,GAAQ,OAAIA,EAASC,QAJP,cAEhBD,EAFgB,yBAKfA,GALe,gCAOtBG,QAAQC,MAAR,MAPsB,yDAAH,sDAWVE,EAAc,mCAAG,WAAMvB,GAAN,gGAEHc,IAAAA,IAAA,iBACNd,EADM,YACQe,GAC5BL,MAAK,SAAAO,GAAQ,OAAIA,EAASC,QAJH,cAEpBD,EAFoB,yBAKnBA,GALmB,gCAO1BG,QAAQC,MAAR,MAP0B,yDAAH,sDAWdG,EAAgB,mCAAG,WAAMxB,GAAN,gGAELc,IAAAA,IAAA,iBACNd,EADM,YACQe,GAC5BL,MAAK,SAAAO,GAAQ,OAAIA,EAASC,KAAKC,WAJN,cAEtBF,EAFsB,yBAKrBA,GALqB,gCAO5BG,QAAQC,MAAR,MAP4B,yDAAH,sDAWhBI,EAAY,mCAAG,WAAMC,GAAN,gFACpBX,EAAS,CAAEA,OAAQ,CAAEC,QAASJ,EAASc,MAAAA,IADnB,kBAGDZ,IAAAA,IAAA,gBACCC,GACrBL,MAAK,SAAAO,GAAQ,OAAIA,EAASC,KAAKC,WALV,cAGlBF,EAHkB,yBAMjBA,GANiB,gCAQxBG,QAAQC,MAAR,MARwB,yDAAH","sources":["components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/moviesAPI.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n// import { List } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.length > 0 &&\n        movies.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import { useEffect, useState } from 'react';\n// import { Outlet, Link, useLocation } from 'react-router-dom';\nimport { fetchTrending } from 'services/moviesAPI';\nimport MovieList from 'components/MovieList';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  // const location = useLocation();\n\n  useEffect(() => {\n    fetchTrending().then(setTrendingMovies);\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <MovieList movies={trendingMovies} />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '6836ceb3068f4013cb2a833e30b38a09';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: { api_key: API_KEY },\n};\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios\n      .get(`/trending/movie/day`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/credits`, params)\n      .then(response => response.data);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieReview = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/reviews`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  const params = { params: { api_key: API_KEY, query } };\n  try {\n    const response = await axios\n      .get(`/search/movie`, params)\n      .then(response => response.data.results);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["movies","location","useLocation","length","map","id","title","to","state","from","useState","trendingMovies","setTrendingMovies","useEffect","fetchTrending","then","MovieList","API_KEY","API_IMG_URL","axios","params","api_key","response","data","results","console","error","fetchMovie","fetchMovieCast","fetchMovieReview","searchMovies","query"],"sourceRoot":""}